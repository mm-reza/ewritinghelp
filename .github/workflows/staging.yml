name: Django CI

on:
  push:
    branches:
      - staging
  
# on:
#   schedule:
#     - cron:  '*/15 * * * *'

# on: push
# name: ðŸš€ Deploy website on push
# jobs:
#   web-deploy:
#     name: ðŸŽ‰ Deploy
#     runs-on: ubuntu-latest
#     steps:
#     - name: ðŸšš Get latest code
#       uses: actions/checkout@v2
    
# name: Deploy website to production on push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow
    - name: Set up Python 3.11.0
      uses: actions/setup-python@v2
      with:
        python-version: 3.11.0

    - name: Set Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/newreq.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install --upgrade wheel
        pip install -r newreq.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Coverage report
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report
    - name: Django Testing
      run: |
        python manage.py test
    - name: ðŸ“‚ Sync files
      uses: SamKirkland/FTP-Deploy-Action@4.3.1
      with:
        server: ${{ secrets.ftp_server }}
        username: ${{ secrets.ftp_username }}
        password: ${{ secrets.ftp_password }}
        server-dir: /staging/
